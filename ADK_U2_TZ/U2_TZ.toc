\babel@toc {czech}{}\relax 
\contentsline {section}{\numberline {1}Zadání}{2}{}%
\contentsline {section}{\numberline {2}Údaje o bonusových úlohách}{4}{}%
\contentsline {section}{\numberline {3}Popis problému}{4}{}%
\contentsline {section}{\numberline {4}Popisy algoritmů}{5}{}%
\contentsline {subsection}{\numberline {4.1}Tvorba konvexní obálky}{5}{}%
\contentsline {subsubsection}{\numberline {4.1.1}Jarvis scan}{5}{}%
\contentsline {subsubsection}{\numberline {4.1.2}Quick Hull}{5}{}%
\contentsline {subsection}{\numberline {4.2}Generalizace budov}{5}{}%
\contentsline {subsubsection}{\numberline {4.2.1}Minimum Enlosing Rectangle}{5}{}%
\contentsline {subsubsection}{\numberline {4.2.2}Metoda Wall Average}{7}{}%
\contentsline {subsubsection}{\numberline {4.2.3}Metoda Longest Edge}{7}{}%
\contentsline {subsubsection}{\numberline {4.2.4}Metoda Weighted Bisector}{8}{}%
\contentsline {section}{\numberline {5}Problematické situace}{8}{}%
\contentsline {subsection}{\numberline {5.1}Transformace souřadnic}{8}{}%
\contentsline {subsubsection}{\numberline {5.1.1}Počátek}{8}{}%
\contentsline {subsubsection}{\numberline {5.1.2}Měřítko}{8}{}%
\contentsline {subsubsection}{\numberline {5.1.3}Transformace souřadnic}{9}{}%
\contentsline {subsection}{\numberline {5.2}Načítání souřadnic s reálným číslem}{10}{}%
\contentsline {section}{\numberline {6}Vstupní data}{11}{}%
\contentsline {section}{\numberline {7}Výstupní data}{12}{}%
\contentsline {section}{\numberline {8}Printscreen vytvořené aplikace}{15}{}%
\contentsline {section}{\numberline {9}Dokumentace}{15}{}%
\contentsline {subsection}{\numberline {9.1}Třída Algorithms}{15}{}%
\contentsline {paragraph}{double get2LinesAngle(QPoint \&p1, QPoint \&p2, QPoint \&p3, QPoint \&p4);}{16}{}%
\contentsline {paragraph}{int getPointLinePosition(QPoint \&a, QPoint \&p1, QPoint \&p2);}{16}{}%
\contentsline {paragraph}{double getPointLineDistance(QPointF \&a, QPointF \&p1, QPointF \&p2);}{17}{}%
\contentsline {paragraph}{QPolygonF cHull (std::vector <QPointF> \&points)}{17}{}%
\contentsline {paragraph}{QPolygonF qHull (std::vector <QPointF> \&points)}{17}{}%
\contentsline {paragraph}{void qHullRecursive(int r, int s, std::vector<QPointF> \&points, QPolygonF \&ch)}{17}{}%
\contentsline {paragraph}{std::vector <QPointF> rotate(std::vector <QPointF> \&points, double sig\-ma);}{17}{}%
\contentsline {paragraph}{std::tuple<std::vector<QPointF>, double> minMaxBox(std::vector <QPoi\-ntF> \&points);}{17}{}%
\contentsline {paragraph}{QPolygonF minAreaEnclosingRectangle(std::vector <QPointF> \&points);}{18}{}%
\contentsline {paragraph}{QPolygonF wallAverage(std::vector <QPointF> \&points);}{18}{}%
\contentsline {paragraph}{QPolygonF longestEdge(std::vector <QPointF> \&points);}{18}{}%
\contentsline {paragraph}{QPolygonF weightedBisector(std::vector <QPointF> \&points);}{18}{}%
\contentsline {paragraph}{double LH(std::vector <QPointF> \&points);}{18}{}%
\contentsline {paragraph}{std::vector <QPointF> resizeRectangle(std::vector <QPointF> \&points, \newline std::vector <QPointF> \&er);}{19}{}%
\contentsline {subsection}{\numberline {9.2}Třída Draw}{19}{}%
\contentsline {paragraph}{void paintEvent(QPaintEvent *event);}{19}{}%
\contentsline {paragraph}{void clear();}{20}{}%
\contentsline {paragraph}{std::vector<QPolygonF> getPolygons()}{20}{}%
\contentsline {paragraph}{void setCh(std::vector <QPolygonF> \&ch\_);}{20}{}%
\contentsline {paragraph}{void setEr(std::vector <QPolygonF> \&er\_); }{20}{}%
\contentsline {paragraph}{void loadData(QString \&file\_name);}{20}{}%
\contentsline {subsection}{\numberline {9.3}Třída SortByX}{20}{}%
\contentsline {subsection}{\numberline {9.4}Třída SortByY}{20}{}%
\contentsline {subsection}{\numberline {9.5}Třída Widget}{20}{}%
\contentsline {paragraph}{ void on\_pushButtonClear\_clicked();}{21}{}%
\contentsline {paragraph}{ void on\_pushButtonAnalyze\_clicked();}{21}{}%
\contentsline {paragraph}{void on\_pushButtonLoad\_clicked();}{21}{}%
\contentsline {paragraph}{void on\_pushButtonConvexHull\_clicked();}{21}{}%
\contentsline {section}{\numberline {10}Závěr}{21}{}%
